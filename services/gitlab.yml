services:
  gitlab:
    # PORTS 80 and 22
    image: gitlab/gitlab-ee:latest # Using latest is fine, or pin to your version
    container_name: gitlab
    restart: unless-stopped
    hostname: "git.${ROOT_DOMAIN}"
    environment:
      GITLAB_ROOT_PASSWORD: ${DB_PASS}
      EXTERNAL_URL: https://git.${ROOT_DOMAIN}
      GITLAB_OMNIBUS_CONFIG: |
        # --- Base URL ---
        external_url 'https://git.${ROOT_DOMAIN}'
        gitlab_rails['omniauth_enabled'] = true
        gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
        gitlab_rails['omniauth_sync_email_from_provider'] = 'openid_connect'
        gitlab_rails['omniauth_sync_profile_from_provider'] = ['openid_connect']
        gitlab_rails['omniauth_sync_profile_attributes'] = ['email']
        gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'
        gitlab_rails['omniauth_block_auto_created_users'] = false
        gitlab_rails['omniauth_auto_link_user'] = ['openid_connect']
        gitlab_rails['memberlist_advertise_addr'] = '172.11.0.5'
        gitaly['advertise_addr'] = '172.11.0.5:8075'
        prometheus['listen_address'] = '172.11.0.5:9090'
        gitlab_pages['listen_proxy'] = '172.11.0.5:8090'

        gitlab_rails['omniauth_providers'] = [
          {
            name: 'openid_connect',
            label: 'OAuth',
            args: {
              name: 'openid_connect',
              scope: ['openid','profile','email'],
              response_type: 'code',
              issuer: 'https://auth.${ROOT_DOMAIN}/application/o/gitlab/',
              discovery: true,
              client_auth_method: 'query',
              uid_field: 'preferred_username',
              send_scope_to_token_endpoint: 'true',
              pkce: true,
              client_options: {
                identifier: '${GL_AUTHENTIK_ID}',
                secret: '${GL_AUTHENTIK_SECRET}',
                redirect_uri: 'https://git.${ROOT_DOMAIN}/users/auth/openid_connect/callback'
              }
            }
          }
        ]
        # --- Caddy Reverse Proxy Settings ---
        # These are critical for making GitLab work behind Caddy
        nginx['enable'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false # Caddy handles HTTPS
        letsencrypt['enable'] = false # Caddy handles SSL certificates
        gitlab_rails['trusted_proxies'] = ['172.11.0.0/16']
    volumes:
      - "${DATA_DIR}/gitlab/config:/etc/gitlab"
      - "${DATA_DIR}/gitlab/logs:/var/log/gitlab"
      - "${DATA_DIR}/gitlab/data:/var/opt/gitlab"
    shm_size: "256m"
    # The 'env_file' paths are relative to the docker-compose.yml file itself
    env_file:
      - ../.env
    networks:
      - caddy_network
